//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsCC45E1802AA7BD4ECDA01D4DF66E8B721E5CAEEB623F86BAF1925D3C1F353E00))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsCC45E1802AA7BD4ECDA01D4DF66E8B721E5CAEEB623F86BAF1925D3C1F353E00 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsCC45E1802AA7BD4ECDA01D4DF66E8B721E5CAEEB623F86BAF1925D3C1F353E00()
        {
            this.EdmEntityContainerName = "TrainingEntities";
            this.StoreEntityContainerName = "TrainingModelStoreContainer";
            this.HashOverMappingClosure = "fff10b6856e706491c26395d59ce7360488be4748925474a5943937865c7de75";
            this.HashOverAllExtentViews = "f2a671bf1debf65b4a402ba1d6f101ad40e1272c7a4353a61970e4220f5e5cf0";
            this.ViewCount = 4;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for TrainingModelStoreContainer.CUST
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("TrainingModelStoreContainer.CUST", @"
    SELECT VALUE -- Constructing CUST
        [TrainingModel.Store.CUST](T1.[CUST.CUST_ID], T1.[CUST.CUST_NO], T1.[CUST.CUST_TYPE], T1.[CUST.CUST_NAME], T1.[CUST.IDENTITY_TYPE], T1.[CUST.IDENTITY_NO], T1.[CUST.USR_CRT], T1.[CUST.DTM_CRT], T1.[CUST.USR_UPD], T1.[CUST.DTM_UPD], T1.[CUST.BIRTH_DT], T1.[CUST.BIRTH_PLACE], T1.[CUST.MARITAL_STATUS], T1.CUST_RELIGION, T1.CUST_NATIONALITY, T1.[CUST.MONTHLY_INCOME])
    FROM (
        SELECT 
            T.CustId AS [CUST.CUST_ID], 
            T.CustNo AS [CUST.CUST_NO], 
            T.CustType AS [CUST.CUST_TYPE], 
            T.CustName AS [CUST.CUST_NAME], 
            T.IdentityType AS [CUST.IDENTITY_TYPE], 
            T.IdentityNo AS [CUST.IDENTITY_NO], 
            T.LastUserTimestamp.UsrCrt AS [CUST.USR_CRT], 
            T.LastUserTimestamp.DtmCrt AS [CUST.DTM_CRT], 
            T.LastUserTimestamp.UsrUpd AS [CUST.USR_UPD], 
            T.LastUserTimestamp.DtmUpd AS [CUST.DTM_UPD], 
            T.BirthDt AS [CUST.BIRTH_DT], 
            T.BirthPlace AS [CUST.BIRTH_PLACE], 
            T.MaritalStatus AS [CUST.MARITAL_STATUS], 
            T.Religion AS CUST_RELIGION, 
            T.Nationality AS CUST_NATIONALITY, 
            T.MonthlyIncome AS [CUST.MONTHLY_INCOME], 
            True AS _from0
        FROM TrainingEntities.Custs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for TrainingEntities.Custs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("TrainingEntities.Custs", "\r\n    SELECT VALUE -- Constructing Custs\r\n        [TrainingModel.Cust](T2.Cust_Cu" +
                    "stId, T2.Cust_CustNo, T2.Cust_CustType, T2.Cust_CustName, T2.Cust_IdentityType, " +
                    "T2.Cust_IdentityNo, T2.Cust_BirthDt, T2.Cust_BirthPlace, T2.Cust_MaritalStatus, " +
                    "T2.Cust_Religion, T2.Cust_Nationality, T2.Cust_MonthlyIncome, T2.Cust_LastUserTi" +
                    "mestamp)\r\n    FROM (\r\n        SELECT -- Constructing LastUserTimestamp\r\n        " +
                    "    T1.Cust_CustId, \r\n            T1.Cust_CustNo, \r\n            T1.Cust_CustType" +
                    ", \r\n            T1.Cust_CustName, \r\n            T1.Cust_IdentityType, \r\n        " +
                    "    T1.Cust_IdentityNo, \r\n            T1.Cust_BirthDt, \r\n            T1.Cust_Bir" +
                    "thPlace, \r\n            T1.Cust_MaritalStatus, \r\n            T1.Cust_Religion, \r\n" +
                    "            T1.Cust_Nationality, \r\n            T1.Cust_MonthlyIncome, \r\n        " +
                    "    [TrainingModel.UserTimestamp](T1.Cust_LastUserTimestamp_UsrCrt, T1.Cust_Last" +
                    "UserTimestamp_DtmCrt, T1.Cust_LastUserTimestamp_UsrUpd, T1.Cust_LastUserTimestam" +
                    "p_DtmUpd) AS Cust_LastUserTimestamp\r\n        FROM (\r\n            SELECT \r\n      " +
                    "          T.CUST_ID AS Cust_CustId, \r\n                T.CUST_NO AS Cust_CustNo, " +
                    "\r\n                T.CUST_TYPE AS Cust_CustType, \r\n                T.CUST_NAME AS" +
                    " Cust_CustName, \r\n                T.IDENTITY_TYPE AS Cust_IdentityType, \r\n      " +
                    "          T.IDENTITY_NO AS Cust_IdentityNo, \r\n                T.BIRTH_DT AS Cust" +
                    "_BirthDt, \r\n                T.BIRTH_PLACE AS Cust_BirthPlace, \r\n                " +
                    "T.MARITAL_STATUS AS Cust_MaritalStatus, \r\n                T.RELIGION AS Cust_Rel" +
                    "igion, \r\n                T.NATIONALITY AS Cust_Nationality, \r\n                T." +
                    "MONTHLY_INCOME AS Cust_MonthlyIncome, \r\n                T.USR_CRT AS Cust_LastUs" +
                    "erTimestamp_UsrCrt, \r\n                T.DTM_CRT AS Cust_LastUserTimestamp_DtmCrt" +
                    ", \r\n                T.USR_UPD AS Cust_LastUserTimestamp_UsrUpd, \r\n              " +
                    "  T.DTM_UPD AS Cust_LastUserTimestamp_DtmUpd, \r\n                True AS _from0\r\n" +
                    "            FROM TrainingModelStoreContainer.CUST AS T\r\n        ) AS T1\r\n    ) A" +
                    "S T2");
        }
        
        /// <Summary>
        /// return view for TrainingModelStoreContainer.REF_MASTER
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("TrainingModelStoreContainer.REF_MASTER", @"
    SELECT VALUE -- Constructing REF_MASTER
        [TrainingModel.Store.REF_MASTER](T1.[REF_MASTER.REF_MASTER_ID], T1.[REF_MASTER.MASTER_CODE], T1.[REF_MASTER.DESCRIPTION], T1.[REF_MASTER.MASTER_TYPE], T1.[REF_MASTER.USR_CRT], T1.[REF_MASTER.DTM_CRT], T1.[REF_MASTER.USR_UPD], T1.[REF_MASTER.DTM_UPD])
    FROM (
        SELECT 
            T.RefMasterId AS [REF_MASTER.REF_MASTER_ID], 
            T.MasterCode AS [REF_MASTER.MASTER_CODE], 
            T.Description AS [REF_MASTER.DESCRIPTION], 
            T.MasterType AS [REF_MASTER.MASTER_TYPE], 
            T.LastUserTimestamp.UsrCrt AS [REF_MASTER.USR_CRT], 
            T.LastUserTimestamp.DtmCrt AS [REF_MASTER.DTM_CRT], 
            T.LastUserTimestamp.UsrUpd AS [REF_MASTER.USR_UPD], 
            T.LastUserTimestamp.DtmUpd AS [REF_MASTER.DTM_UPD], 
            True AS _from0
        FROM TrainingEntities.RefMasters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for TrainingEntities.RefMasters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("TrainingEntities.RefMasters", @"
    SELECT VALUE -- Constructing RefMasters
        [TrainingModel.RefMaster](T2.RefMaster_RefMasterId, T2.RefMaster_MasterCode, T2.RefMaster_Description, T2.RefMaster_MasterType, T2.RefMaster_LastUserTimestamp)
    FROM (
        SELECT -- Constructing LastUserTimestamp
            T1.RefMaster_RefMasterId, 
            T1.RefMaster_MasterCode, 
            T1.RefMaster_Description, 
            T1.RefMaster_MasterType, 
            [TrainingModel.UserTimestamp](T1.RefMaster_LastUserTimestamp_UsrCrt, T1.RefMaster_LastUserTimestamp_DtmCrt, T1.RefMaster_LastUserTimestamp_UsrUpd, T1.RefMaster_LastUserTimestamp_DtmUpd) AS RefMaster_LastUserTimestamp
        FROM (
            SELECT 
                T.REF_MASTER_ID AS RefMaster_RefMasterId, 
                T.MASTER_CODE AS RefMaster_MasterCode, 
                T.DESCRIPTION AS RefMaster_Description, 
                T.MASTER_TYPE AS RefMaster_MasterType, 
                T.USR_CRT AS RefMaster_LastUserTimestamp_UsrCrt, 
                T.DTM_CRT AS RefMaster_LastUserTimestamp_DtmCrt, 
                T.USR_UPD AS RefMaster_LastUserTimestamp_UsrUpd, 
                T.DTM_UPD AS RefMaster_LastUserTimestamp_DtmUpd, 
                True AS _from0
            FROM TrainingModelStoreContainer.REF_MASTER AS T
        ) AS T1
    ) AS T2");
        }
    }
}
